/*
========================================================================================
    CONFIG
========================================================================================
*/

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: "${params.publish_dir_mode}",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withLabel: sequencing {
		container = "bahnk/sequencing:v1"
	}

    withLabel: python {
		container = "bahnk/python:v1"
	}

    withLabel: demultiplexing {
		publishDir = [
			path: { "${params.outdir}/files" },
			mode: "${params.publish_dir_mode}"
		]
	}

    withLabel: pucks {
		publishDir = [
            path: { "${params.outdir}/files/pucks" },
            mode: "${params.publish_dir_mode}",
            enabled: true
		]
	}

    withName: UNTAR_STAR_INDEX {
        publishDir = [
            enabled: false
        ]
    }

    withName: FASTQC {
        publishDir = [
            path: { "${params.outdir}/qc/fastqc" },
            mode: "${params.publish_dir_mode}",
            enabled: true
        ]
    }

    withName: TAG_BAM {
        publishDir = [
            path: { "${params.outdir}/files/tagged" },
            mode: "${params.publish_dir_mode}",
            enabled: true
        ]
    }

    withName: READS_UP_MATCHING {
        ext.suffix = 'reads_up_matching'
        publishDir = [
            path: { "${params.outdir}/qc/bam_metrics" },
            mode: "${params.publish_dir_mode}",
            enabled: true
        ]
    }
}

/*
========================================================================================
    PLOTS
========================================================================================
*/

process {
    withLabel: plot {
		container = "bahnk/python:v1"
	}

    withName: PLOT_UP_MATCHING {
        ext.script = 'plot_up_matching.py'
        ext.args = ''
        ext.suffix = 'up_matching'
        publishDir = [
            path: { "${params.outdir}/plots" },
            mode: "${params.publish_dir_mode}",
            enabled: true
        ]
    }

    withName: PLOT_BARCODE_EXTRACTION {
        ext.script = 'plot_barcode_extraction.py'
        ext.args = ''
        ext.suffix = 'up_matching'
        publishDir = [
            path: { "${params.outdir}/plots" },
            mode: "${params.publish_dir_mode}",
            enabled: true
        ]
    }

    withName: PLOT_UP_ALIGN {
        ext.script = 'plot_up_align.py'
        ext.args = ''
        ext.suffix = 'up_align'
        publishDir = [
            path: { "${params.outdir}/plots" },
            mode: "${params.publish_dir_mode}",
            enabled: true
        ]
    }
}

	// withLabel: tagging {
	// 	publishDir = [
	// 		path: { Paths.get( params.out_dir , "files" ) },
	// 		mode: publish_mode,
	// 		overwrite: publish_overwrite
	// 	]
	// }





	// ////////////////////////////////////////////////////////////////////////////





	// withLabel: samtools {
	// 	container = "docker://bahnk/samtools:v1"
	// }

	// ///////////////////////////////////////////////////////////////////////////



	// withName: umis_per_barcode {

	// 	executor = "slurm"
	// 	cpus = 32
	// 	memory = "600G"
	// 	time = "24:00:00"
	// 	clusterOptions = "--partition=hmem"
	// }